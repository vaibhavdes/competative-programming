
Given a valid (IPv4) IP address, return a defanged version of that IP address.

A defanged IP address replaces every period "." with "[.]". 

Example 1:

Input: address = "1.1.1.1"
Output: "1[.]1[.]1[.]1"
Example 2:

Input: address = "255.100.50.0"
Output: "255[.]100[.]50[.]0"


//Java
class Solution {
    public String defangIPaddr(String address) {
        String defangAddress = address.replaceAll("\\.","[.]");
        return defangAddress;
    }
}

//C++
class Solution {
    public String defangIPaddr(String address) {
        return regex_replace(address,regex("\\."),"[.]");
    }
}

//Java Fast Solution

class Solution {
    public String defangIPaddr(String address) {
        StringBuilder sb = new StringBuilder();
        char[] defangAddress = address.toCharArray();
        for(int i=0; i<defangAddress.length;i++)
        {
            if(defangAddress[i]=='.')
            {
                sb.append("[.]");
            }
            else
            {
                sb.append(defangAddress[i]);
            }
        }
        return sb.toString();
    }
}

//Fast & Short
class Solution {
    public String defangIPaddr(String address) {
        StringBuilder sb = new StringBuilder();
        for(int i=0; i<address.length();i++)
        {
            if(address.charAt(i)=='.')
            {
                sb.append("[.]");
            }
            else
            {
                sb.append(address.charAt(i));
            }
        }
        return sb.toString();
    }
}
