/*
Given an unsorted array A of size N of non-negative integers, find a continuous sub-array which adds to a given number S.

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of two lines. The first line of each test case is N and S, where N is the size of array and S is the sum. The second line of each test case contains N space separated integers denoting the array elements.

Output:
For each testcase, in a new line, print the starting and ending positions(1 indexing) of first such occuring subarray from the left if sum equals to subarray, else print -1.

Constraints:
1 <= T <= 100
1 <= N <= 107
1 <= Ai <= 1010

Example:
Input:
2
5 12
1 2 3 7 5
10 15
1 2 3 4 5 6 7 8 9 10
Output:
2 4
1 5

Explanation :
Testcase1: sum of elements from 2nd position to 4th position is 12
Testcase2: sum of elements from 1st position to 5th position is 15
*/



/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class Main {
	public static void main (String[] args) {
		//code
		Scanner sc = new Scanner(System.in);
		int cases;
		cases = sc.nextInt();
		while(cases>0)
		{
		    int size;
		    int sum;
		    int expected = 0;
		    
		    size = sc.nextInt();
		    sum = sc.nextInt();
		    
		    int[] arr = new int[size];
		    
		    for(int i=0;i<size;i++)
	        {
	            arr[i] = sc.nextInt();
	        }
	        int j = 0;
	        int k = 0;
	        for(;k<size;k++)
	        {
	               if(sum>expected && k<size)
	                    expected+=arr[k];
	                
	               while(sum<expected)
	               {
	                   expected-=arr[j];
	                   j++;
	               }
	               
	               if(sum==expected)
	               {
	                    System.out.println((j+1)+" "+(k+1));
	                    break;
	               }
	               else if(k==size-1)
	               {
	                    System.out.println(-1);
	                    break;
	               }          	               	           
	        }
		    cases--;
		}
	}
}
